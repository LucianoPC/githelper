#!/usr/bin/env ruby

require 'bundler/setup'
require 'githelper'

VALID_OPTIONS = %w(branch).freeze

def usage
  puts 'Usage: gith branch [branch_name] [base_branch_name]'
  puts "\n by default, base_branch_name is 'master'"

  abort
end

def branchs_names
  if ARGV.count > 1
    branch_names = [ARGV[1]]
    base_branch_name = ARGV[2] || 'master'
  else
    base_branch_name = 'master'
    branch_names = Githelper.get_all_branchs(base_branch_name)
  end

  [branch_names, base_branch_name]
end

def branch
  branch_names, base_branch_name = branchs_names

  branch_names.each do |branch_name|
    puts "\n" if branch_name != branch_names.first
    show_branch_status(branch_name, base_branch_name)
  end
end

def show_branch_status(branch_name, base_branch_name)
  result = Githelper.check_branch(branch_name, base_branch_name)
  puts "Branch: #{branch_name}"
  if result == Githelper::BRANCH_STATUS[:need_rebase]
    puts 'Status: Need Rebase'
  elsif result == Githelper::BRANCH_STATUS[:is_merged]
    puts 'Status: Is Merged'
  elsif result == Githelper::BRANCH_STATUS[:none]
    puts 'Status: OK'
  end
  puts "With: #{base_branch_name}"
end

def main
  usage if ARGV.count == 0 || !VALID_OPTIONS.include?(ARGV[0])

  option = ARGV[0]
  send(option.to_s)
end

main
